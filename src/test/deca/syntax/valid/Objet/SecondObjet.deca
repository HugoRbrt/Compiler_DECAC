// Description:
//    Testing object-oriented Deca, with method signatures.
//
// Results:
//    (void)
//
// Historique:
//    cree le 13/01/2022

class A {
    int x;
    protected int y;
    void setX(int x) {
    }
    float magic() {
    }
    boolean long(int x, float y) {
        y = magic();
        y = this.magic();
    }
}

class B extends A {
    int x = 2;
    void setX(int x) {
    }
    A powerup(int x) {
        A z = new A();
        x = 2 + 3;
        y = 4;
        z.x = 5;
        this.x = 6;
        return z;
    }
}

//Method has already been declared
//class C extends A {
//    void setX(int x) {
//    }
//    void setX(int x) {
//    }
//}

//Invalid method override
//class C extends A {
//    boolean equals() {
//    }
//}

//Illegal override: field --> method
//class C extends A {
//    int x() {
//    }
//}

//Parameter has already been declared
//class C extends A {
//    void booyashaka(int x, float x) {
//    }
//}

//Variable has already been declared.
//class C extends A {
//    int x;
//    void rep(int x) {
//        int x;
//    }
//}

//Incompatible return expression type
//class C extends A {
//    int ret() {
//        float x;
//        return x;
//    }
//}

//Selecting class not a subclass of current class
//class C extends A {
//    int getY(A a) {
//        return a.y;
//    }
//}

//Protected field is not visible in the current scope
//class C {
//    int getY() {
//       A a = new A();
//       a.y = 3;
//    }
//}

{
    A a = new A();
    int y;
    float f = a.magic();
    boolean b = a.long(a.x, f);
//Invalid parameter list
//    boolean c = a.long();
//Incompatible type assignment
//    boolean d = a.magic();
    a.x = 7;
//Variable has not been declared
//    a.y = 4;
//Variable has not been declared
//    a.d = 1;
//'This' reference outside of class scope
//    this.x = 3;
//Method has not been declared
//    magic();
}